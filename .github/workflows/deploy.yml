name: Deploy to Fly.io

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build shared types package
        run: cd shared-types && npm run build

      - name: Run type check
        run: pnpm run build

      - name: Run linting
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test

  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4


      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot JAR
        run: |
          mvn clean package -DskipTests
        working-directory: ./backend

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          flyctl secrets set DATABASE_USERNAME="${{ secrets.DATABASE_USERNAME }}" --app aitechj-backend-v2
          flyctl secrets set DATABASE_FILE_PASSWORD="${{ secrets.DATABASE_FILE_PASSWORD }}" --app aitechj-backend-v2
          flyctl secrets set DATABASE_USER_PASSWORD="${{ secrets.DATABASE_USER_PASSWORD }}" --app aitechj-backend-v2
          flyctl deploy --app aitechj-backend-v2 --config ./fly.toml --remote-only
        working-directory: ./backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
